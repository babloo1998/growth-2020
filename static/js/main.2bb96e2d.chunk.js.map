{"version":3,"sources":["components/timeline-module/index.js","components/Root/index.js","components/Home/index.js","components/fiterScreen/filterData.js","components/fiterScreen/index.js","routes.js","App.js","serviceWorker.js","index.js"],"names":["Timeline","sendDataToParents","props","parentCallback","console","log","this","style","backgroundColor","backgroundcolor","width","className","data","map","item","index","heading","onClick","React","Component","Root","state","openCamera","history","push","Home","TakeSnap","e","preventDefault","takepicture","canvas","document","createElement","video","getElementById","getContext","drawImage","toDataURL","localStorage","setItem","navigator","mediaDevices","getUserMedia","audio","then","stream","srcObject","play","catch","err","id","FilterData","settings","dots","infinite","speed","slidesToShow","slidesToScroll","routes","path","exact","component","imageUrl","filterName","applyFilter","setState","saveImage","a","image","context","filter","replace","window","open","getItem","src","App","renderRoutes","Boolean","location","hostname","match","ReactDOM","render","StrictMode","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.2bb96e2d.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.scss\";\n\nexport default class Timeline extends React.Component {\n  \ncomponentDidMount() {\n    console.log(this.props);\n  };\n\n  sendDataToParents = () =>{\n      this.props.parentCallback('heya i am data from child')\n  }\n\n  render() {\n    return(\n        <div style = {{ backgroundColor: this.props.backgroundcolor ? this.props.backgroundcolor : 'black', width: '100%' }} className= 'timeline-wrapper'>\n            <div className='timeline'>\n                {\n                    this.props.data && <div>\n                        {this.props.data.map((item, index) => \n                            <div className='individualCard'>\n                                {item.heading}\n                            </div>\n                        )}\n                    </div>\n                }\n                <button onClick = {()=>this.sendDataToParents()}>Hello frnds</button>\n            </div>\n        </div>\n    )\n  }\n}\n","import React from 'react';\nimport Timeline from '../timeline-module';\nimport './style.scss';\n\nexport default class Root extends React.Component{\n\n    state = {\n        // Data : [\n        //     {\n        //       Title: 'Babloo Mishra',\n        //       subTitle: 'He is a good guy',\n        //       detail: 'great person',\n        //       date: '02/01/1998'\n        //     },\n        //     {\n        //       Title: 'Babloo Mishra',\n        //       subTitle: 'He is a good guy',\n        //       detail: 'great person',\n        //       date: '02/01/1998'\n        //     },\n        //     {\n        //       Title: 'Babloo Mishra',\n        //       subTitle: 'He is a good guy',\n        //       detail: 'great person',\n        //       date: '02/01/1998'\n        //     },\n        //     {\n        //       Title: 'Babloo Mishra',\n        //       subTitle: 'He is a good guy',\n        //       detail: 'great person',\n        //       date: '02/01/1998'\n        //     },\n        //     {\n        //       Title: 'Babloo Mishra',\n        //       subTitle: 'He is a good guy',\n        //       detail: 'great person',\n        //       date: '02/01/1998'\n        //     },\n        //     {\n        //       Title: 'Babloo Mishra',\n        //       subTitle: 'He is a good guy',\n        //       detail: 'great person',\n        //       date: '02/01/1998'\n        //     },\n        //     {\n        //       Title: 'Babloo Mishra',\n        //       subTitle: 'He is a good guy',\n        //       detail: 'great person',\n        //       date: '02/01/1998'\n        //     }\n        //   ]\n    }\n\n    openCamera = () =>{\n        this.props.history.push('/home')\n    };\n\n    // handleCallback = (dataFromChild) =>{\n    //     console.log('%%^^^^^^^',dataFromChild);\n    // }\n\n    render(){\n        return(\n            <div className ='Root'>\n                <button onClick ={this.openCamera} className='start-camera'>Take Snap</button>\n            </div>\n        )\n    }\n}","import React from \"react\";\nimport \"./style.scss\";\n\nexport default class Home extends React.Component {\n  componentDidMount() {\n    const video = document.getElementById(\"video\");\n    navigator.mediaDevices\n      .getUserMedia({ video: true, audio: false })\n      .then(function (stream) {\n        video.srcObject = stream;\n        video.play();\n      })\n      .catch(function (err) {\n        console.log(\"An error occurred: \" + err);\n      });\n  }\n\n  TakeSnap = (e) => {\n    e.preventDefault();\n    this.takepicture();\n  };\n\n  takepicture = () => {\n    let canvas = document.createElement(\"canvas\");\n    const video = document.getElementById(\"video\");\n    let context = canvas.getContext(\"2d\");\n    context.drawImage(video, 0, 0, 300, 150);\n    var data = canvas.toDataURL(\"image/png\");\n    localStorage.setItem('imageUrl', data);\n    this.props.history.push('filter');\n  };\n\n  render() {\n    return (\n      <div className=\"camera-Component\">\n        <div className=\"videoStream\">\n          <video id=\"video\"></video>\n        </div>\n        <div className=\"snap-button\">\n          <button onClick={(e) => this.TakeSnap(e)} id=\"startbutton\"></button>\n        </div>\n        <canvas id=\"canvas\"></canvas>\n      </div>\n    );\n  }\n}\n","const FilterData = [\n    {\n        'filterName': 'filter-1977',\n        'index': 1\n    },\n    {\n        'filterName': 'filter-aden',\n        'index': 2\n    },\n    {\n        'filterName': 'filter-xpro-ii',\n        'index': 3\n    },\n    {\n        'filterName': 'filter-sutro',\n        'index': 4\n    },\n    {\n        'filterName': 'filter-toaster',\n        'index': 5\n    },\n    {\n        'filterName': 'filter-poprocket',\n        'index': 6\n    },\n    {\n        'filterName': 'filter-hudson',\n        'index': 7\n    },\n    {\n        'filterName': 'black-and-white',\n        'index': 8\n    },\n    {\n        'filterName': 'dim',\n        'index': 9\n    },\n    {\n        'filterName': 'contrast',\n        'index': 10\n    },\n    {\n        'filterName': 'blur',\n        'index': 11\n    },\n    {\n        'filterName': 'hue-rotate',\n        'index': 12\n    },\n    {\n        'filterName': 'invert',\n        'index': 13\n    },\n    {\n        'filterName': 'saturate',\n        'index': 14\n    },\n\n  ];\n  \n  export default FilterData;\n  ","import React from \"react\";\nimport \"./style.scss\";\nimport FilterData from './filterData';\nimport Slider from \"react-slick\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\n\nconst settings = {\n  dots: true,\n  infinite: true,\n  speed: 500,\n  slidesToShow: 3,\n  slidesToScroll: 1\n};\n\nexport default class FilterScreen extends React.Component {\n  state = {\n    imageUrl: \"\",\n    filterName : \"\" \n  };\n\n  componentDidMount(){\n    this.setState({\n        imageUrl: localStorage.getItem('imageUrl')\n    })\n  };\n\n  applyFilter = (filterName) =>{\n    this.setState({\n      filterName : filterName\n    })\n  };\n\n  saveImage = async() =>{\n    const { filterName } = this.state;\n    let canvas = document.createElement(\"canvas\");\n    const image = document.getElementById(\"filter-image\");\n    let context = canvas.getContext(\"2d\");\n    if(filterName == 'filter-1977'){\n      context.filter = \"grayscale(1)\";\n    }\n    else if(filterName == 'filter-aden'){\n      context.filter = \"sepia(.15) brightness(1.2)\";\n    }\n    if(filterName == 'filter-1977'){\n      context.filter = \"grayscale(1)\";\n    }\n    else if(filterName == 'filter-xpro-ii'){\n      context.filter = \"sepia(.45) contrast(1.25) brightness(1.75) saturate(1.3) hue-rotate(-5deg)\";\n    }\n    if(filterName == 'filter-sutro'){\n      context.filter = \"sepia(.4) contrast(1.2) brightness(.9) saturate(1.4) hue-rotate(-10deg)\";\n    }\n    else if(filterName == 'filter-toaster'){\n      context.filter = \"sepia(.25) contrast(1.5) brightness(.95) hue-rotate(-15deg)\";\n    }\n    if(filterName == 'filter-poprocket'){\n      context.filter = \"sepia(.15) brightness(1.2)\";\n    }\n    else if(filterName == 'filter-hudson'){\n      context.filter = \"sepia(.25) contrast(1.2) brightness(1.2) saturate(1.05) hue-rotate(-15deg)\";\n    }\n    if(filterName == 'black-and-white'){\n      context.filter = \"grayscale(100%)\";\n    }\n    else if(filterName == 'dim'){\n      context.filter = \"contrast(200%)\";\n    }\n    context.drawImage(image, 0, 0, 300, 150);\n    var data = await canvas.toDataURL(\"image/png\").replace(\"image/png\", \"image/octet-stream\");;\n    window.open(data,\"_blank\")\n  }\n\n  render() {\n    const { imageUrl, filterName } = this.state;\n    return (\n      <div className=\"filterScreen\">\n        <div className=\"captured-image\">\n          <img id ='filter-image' className = {filterName} src = {imageUrl}></img>\n        </div>\n        <div className= 'slider'>\n        <Slider {...settings}>\n          {FilterData.map(item =>{return(<img onClick={()=>this.applyFilter(item.filterName)} className={item.filterName} src={imageUrl}></img>)})}\n        </Slider>\n        </div>\n        <button className ='save-btn' onClick={() =>this.saveImage()}>Save To Gallery</button>\n      </div>\n    );\n  }\n}\n","import Root from \"./components/Root/index\";\nimport Home from \"./components/Home/index\";\nimport FilterScreen from \"./components/fiterScreen/index\";\nimport Timeline from './components/timeline-module/index';\n\nconst routes = [\n  {\n    path: \"/\",\n    exact: true,\n    component: Root,\n  },\n  {\n    path: \"/home\",\n    exact: true,\n    component: Home,\n  },\n  {\n    path: \"/filter\",\n    exact: true,\n    component: FilterScreen,\n  },\n  {\n    path: \"/timeline\",\n    exact: true,\n    component: Timeline,\n  },\n];\n\nexport default routes;\n","import React from 'react';\nimport './App.css';\nimport { renderRoutes } from 'react-router-config';\nimport { BrowserRouter } from  'react-router-dom';\nimport routes from './routes';\n\nfunction App() {\n  return (\n      <BrowserRouter>\n        {renderRoutes(routes)}\n      </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}